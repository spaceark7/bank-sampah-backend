{"level":"error","message":"Error: \nInvalid `prismaClient.user.create()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/users/user-services.ts:23:42\n\n  20 }\n  21 data.password = await bcrypt.hash(data.password, 10)\n  22 \n→ 23 const user = await prismaClient.user.create(\nUnique constraint failed on the fields: (`phone_number`)"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:24:42\n\n  21 }\n  22 data.password = await bcrypt.hash(data.password, 10)\n  23 \n→ 24 const user = await prismaClient.user.create(\nForeign key constraint failed on the field: `users_role_id_fkey (index)`"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:24:42\n\n  21 }\n  22 data.password = await bcrypt.hash(data.password, 10)\n  23 \n→ 24 const user = await prismaClient.user.create(\nForeign key constraint failed on the field: `users_role_id_fkey (index)`"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:24:42\n\n  21 }\n  22 data.password = bcrypt.hashSync(data.password, 10)\n  23 \n→ 24 const user = await prismaClient.user.create(\nForeign key constraint failed on the field: `users_role_id_fkey (index)`"}
{"level":"error","message":"Error: \nInvalid `prismaClient.citizenship.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:231:52\n\n  228   throw new ResponseError(404, 'User not found')\n  229 }\n  230 \n→ 231 const citizen = await prismaClient.citizenship.create({\n        data: {\n          user_detail_email: \"Elias35@hotmail.com\",\n          nik_number: \"1234567887654321\",\n          family_id_number: \"1234567887654321\",\n          address: {\n            address: \"in eiusmod\",\n            ~~~~~~~\n            village: \"commodo\",\n            district: \"officia occaecat voluptate enim\",\n            city: \"Mesquite\",\n            province: \"exercitation culpa ex fugiat nisi\",\n            postal_code: \"38073\",\n      ?     create?: AddressCreateWithoutCitizenshipInput | AddressUncheckedCreateWithoutCitizenshipInput,\n      ?     connectOrCreate?: AddressCreateOrConnectWithoutCitizenshipInput,\n      ?     connect?: AddressWhereUniqueInput\n          },\n          birth_place: \"dolore anim magna dolor\",\n          birth_date: new Date(\"2024-03-14T03:09:44.924Z\")\n        }\n      })\n\nUnknown argument `address`. Available options are marked with ?."}
{"level":"error","message":"Error: \nInvalid `prismaClient.citizenship.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:231:52\n\n  228   throw new ResponseError(404, 'User not found')\n  229 }\n  230 \n→ 231 const citizen = await prismaClient.citizenship.create(\nNull constraint violation on the fields: (`user_detail_email`)"}
{"level":"error","message":"Error: \nInvalid `prismaClient.citizenship.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:231:52\n\n  228   throw new ResponseError(404, 'User not found')\n  229 }\n  230 \n→ 231 const citizen = await prismaClient.citizenship.create(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `prismaClient.citizenship.upsert()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:231:52\n\n  228   throw new ResponseError(404, 'User not found')\n  229 }\n  230 \n→ 231 const citizen = await prismaClient.citizenship.upsert(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `.upsert()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:232:8\n\n  229 }\n  230 \n  231 const citizen = await prismaClient.citizenship\n→ 232   .upsert(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:181:49\n\n  178   throw new ResponseError(404, 'User not found')\n  179 }\n  180 \n→ 181 const updatedUser = await prismaClient.user.update(\nUnique constraint failed on the fields: (`phone_number`)"}
{"level":"error","message":"Error: \nInvalid `.upsert()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:240:8\n\n  237 }\n  238 \n  239 const citizen = await prismaClient.citizenship\n→ 240   .upsert(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `.upsert()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:240:8\n\n  237 }\n  238 \n  239 const citizen = await prismaClient.citizenship\n→ 240   .upsert(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `.upsert()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:240:8\n\n  237 }\n  238 \n  239 const citizen = await prismaClient.citizenship\n→ 240   .upsert(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:87:8\n\n  84 const data: MaterialParam = await Validate(MaterialCreateSchema, param)\n  85 console.log(id, param)\n  86 const material = await prismaClient.material\n→ 87   .update(\nUnique constraint failed on the fields: (`name`)"}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
