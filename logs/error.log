{"level":"error","message":"Error: \nInvalid `prismaClient.user.create()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/users/user-services.ts:23:42\n\n  20 }\n  21 data.password = await bcrypt.hash(data.password, 10)\n  22 \n→ 23 const user = await prismaClient.user.create(\nUnique constraint failed on the fields: (`phone_number`)"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:24:42\n\n  21 }\n  22 data.password = await bcrypt.hash(data.password, 10)\n  23 \n→ 24 const user = await prismaClient.user.create(\nForeign key constraint failed on the field: `users_role_id_fkey (index)`"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:24:42\n\n  21 }\n  22 data.password = await bcrypt.hash(data.password, 10)\n  23 \n→ 24 const user = await prismaClient.user.create(\nForeign key constraint failed on the field: `users_role_id_fkey (index)`"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:24:42\n\n  21 }\n  22 data.password = bcrypt.hashSync(data.password, 10)\n  23 \n→ 24 const user = await prismaClient.user.create(\nForeign key constraint failed on the field: `users_role_id_fkey (index)`"}
{"level":"error","message":"Error: \nInvalid `prismaClient.citizenship.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:231:52\n\n  228   throw new ResponseError(404, 'User not found')\n  229 }\n  230 \n→ 231 const citizen = await prismaClient.citizenship.create({\n        data: {\n          user_detail_email: \"Elias35@hotmail.com\",\n          nik_number: \"1234567887654321\",\n          family_id_number: \"1234567887654321\",\n          address: {\n            address: \"in eiusmod\",\n            ~~~~~~~\n            village: \"commodo\",\n            district: \"officia occaecat voluptate enim\",\n            city: \"Mesquite\",\n            province: \"exercitation culpa ex fugiat nisi\",\n            postal_code: \"38073\",\n      ?     create?: AddressCreateWithoutCitizenshipInput | AddressUncheckedCreateWithoutCitizenshipInput,\n      ?     connectOrCreate?: AddressCreateOrConnectWithoutCitizenshipInput,\n      ?     connect?: AddressWhereUniqueInput\n          },\n          birth_place: \"dolore anim magna dolor\",\n          birth_date: new Date(\"2024-03-14T03:09:44.924Z\")\n        }\n      })\n\nUnknown argument `address`. Available options are marked with ?."}
{"level":"error","message":"Error: \nInvalid `prismaClient.citizenship.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:231:52\n\n  228   throw new ResponseError(404, 'User not found')\n  229 }\n  230 \n→ 231 const citizen = await prismaClient.citizenship.create(\nNull constraint violation on the fields: (`user_detail_email`)"}
{"level":"error","message":"Error: \nInvalid `prismaClient.citizenship.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:231:52\n\n  228   throw new ResponseError(404, 'User not found')\n  229 }\n  230 \n→ 231 const citizen = await prismaClient.citizenship.create(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `prismaClient.citizenship.upsert()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:231:52\n\n  228   throw new ResponseError(404, 'User not found')\n  229 }\n  230 \n→ 231 const citizen = await prismaClient.citizenship.upsert(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `.upsert()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:232:8\n\n  229 }\n  230 \n  231 const citizen = await prismaClient.citizenship\n→ 232   .upsert(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:181:49\n\n  178   throw new ResponseError(404, 'User not found')\n  179 }\n  180 \n→ 181 const updatedUser = await prismaClient.user.update(\nUnique constraint failed on the fields: (`phone_number`)"}
{"level":"error","message":"Error: \nInvalid `.upsert()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:240:8\n\n  237 }\n  238 \n  239 const citizen = await prismaClient.citizenship\n→ 240   .upsert(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `.upsert()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:240:8\n\n  237 }\n  238 \n  239 const citizen = await prismaClient.citizenship\n→ 240   .upsert(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `.upsert()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/users/user-services.ts:240:8\n\n  237 }\n  238 \n  239 const citizen = await prismaClient.citizenship\n→ 240   .upsert(\nUnique constraint failed on the fields: (`nik_number`)"}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:87:8\n\n  84 const data: MaterialParam = await Validate(MaterialCreateSchema, param)\n  85 console.log(id, param)\n  86 const material = await prismaClient.material\n→ 87   .update(\nUnique constraint failed on the fields: (`name`)"}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/materials/material-services.ts:136:8\n\n  133   throw new ResponseError(400, 'Material already deleted')\n  134 }\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `tx.transaction.update()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/transactions/transaction-services.ts:247:44\n\n  244     transaction_id: id\n  245   }\n  246 })\n→ 247 const updated = await tx.transaction.update({\n        where: {\n          id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n        },\n        data: {\n          notes: \"299e4574-b300-432f-a0cc-758ec2a51402 telah update\",\n          transaction_status: \"Success\",\n          transaction_type: \"Redeem\",\n          transaction_detail: {\n            createMany: {\n              data: [\n                {\n                  id: \"0cf04a17-5875-47a6-9a1f-9969b4be3117\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T21:57:42.169Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Bronze\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"bda833c5-512e-451c-92d3-89e9ad1ff273\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T22:46:24.653Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Concrete\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"137c66b1-181a-4413-9fd6-f8d72dfacdf6\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T18:29:59.066Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Frozen\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"28ceb133-06a0-4eb4-95a1-45d1d6e4c154\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-16T02:08:44.852Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Metal\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                }\n              ],\n              skipDuplicates: true\n            }\n          }\n        },\n        include: {\n          transaction_detail: true,\n          user_detail: {\n            select: {\n              id: true,\n              first_name: true,\n              last_name: true,\n              user_email: true,\n              balance: {\n                select: {\n                  balance_amount: true\n                }\n              }\n            }\n          }\n        }\n      })\n\nUnknown argument `transaction_id`. Did you mean `transaction_unit`? Available options are marked with ?."}
{"level":"error","message":"Error: \nInvalid `tx.transaction.update()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/transactions/transaction-services.ts:247:44\n\n  244     transaction_id: id\n  245   }\n  246 })\n→ 247 const updated = await tx.transaction.update({\n        where: {\n          id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n        },\n        data: {\n          notes: \"299e4574-b300-432f-a0cc-758ec2a51402 telah update\",\n          transaction_status: \"Success\",\n          transaction_type: \"Redeem\",\n          transaction_detail: {\n            createMany: {\n              data: [\n                {\n                  id: \"0cf04a17-5875-47a6-9a1f-9969b4be3117\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T21:57:42.169Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Bronze\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"bda833c5-512e-451c-92d3-89e9ad1ff273\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T22:46:24.653Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Concrete\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"137c66b1-181a-4413-9fd6-f8d72dfacdf6\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T18:29:59.066Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Frozen\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"28ceb133-06a0-4eb4-95a1-45d1d6e4c154\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-16T02:08:44.852Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Metal\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                }\n              ],\n              skipDuplicates: true\n            }\n          }\n        },\n        include: {\n          transaction_detail: true,\n          user_detail: {\n            select: {\n              id: true,\n              first_name: true,\n              last_name: true,\n              user_email: true,\n              balance: {\n                select: {\n                  balance_amount: true\n                }\n              }\n            }\n          }\n        }\n      })\n\nUnknown argument `transaction_id`. Did you mean `transaction_unit`? Available options are marked with ?."}
{"level":"error","message":"Error: \nInvalid `tx.transaction.update()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/transactions/transaction-services.ts:252:44\n\n  249     PrismaErrorHandle(error)\n  250   })\n  251 \n→ 252 const updated = await tx.transaction.update({\n        where: {\n          id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n        },\n        data: {\n          notes: \"299e4574-b300-432f-a0cc-758ec2a51402 telah update\",\n          transaction_status: \"Success\",\n          transaction_type: \"Redeem\",\n          transaction_detail: {\n            createMany: {\n              data: [\n                {\n                  id: \"0cf04a17-5875-47a6-9a1f-9969b4be3117\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T21:57:42.169Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Bronze\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"bda833c5-512e-451c-92d3-89e9ad1ff273\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T22:46:24.653Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Concrete\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"137c66b1-181a-4413-9fd6-f8d72dfacdf6\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T18:29:59.066Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Frozen\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"28ceb133-06a0-4eb4-95a1-45d1d6e4c154\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-16T02:08:44.852Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Metal\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                }\n              ],\n              skipDuplicates: true\n            }\n          }\n        },\n        include: {\n          transaction_detail: true,\n          user_detail: {\n            select: {\n              id: true,\n              first_name: true,\n              last_name: true,\n              user_email: true,\n              balance: {\n                select: {\n                  balance_amount: true\n                }\n              }\n            }\n          }\n        }\n      })\n\nUnknown argument `transaction_id`. Did you mean `transaction_unit`? Available options are marked with ?."}
{"level":"error","message":"Error: \nInvalid `tx.transaction.update()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/transactions/transaction-services.ts:252:44\n\n  249     PrismaErrorHandle(error)\n  250   })\n  251 \n→ 252 const updated = await tx.transaction.update({\n        where: {\n          id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n        },\n        data: {\n          notes: \"299e4574-b300-432f-a0cc-758ec2a51402 telah update\",\n          transaction_status: \"Success\",\n          transaction_type: \"Redeem\",\n          transaction_detail: {\n            createMany: {\n              data: [\n                {\n                  id: \"0cf04a17-5875-47a6-9a1f-9969b4be3117\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T21:57:42.169Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Bronze\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"bda833c5-512e-451c-92d3-89e9ad1ff273\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T22:46:24.653Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Concrete\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"137c66b1-181a-4413-9fd6-f8d72dfacdf6\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-15T18:29:59.066Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Frozen\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                },\n                {\n                  id: \"28ceb133-06a0-4eb4-95a1-45d1d6e4c154\",\n                  transaction_amount: 300,\n                  transaction_weight: 10,\n                  transaction_date: \"2024-03-16T02:08:44.852Z\",\n                  transaction_unit: \"Kg\",\n                  transaction_material: \"Metal\",\n                  transaction_image_url: null,\n                  created_at: \"2024-03-16T17:29:35.700Z\",\n                  updated_at: \"2024-03-16T17:29:35.700Z\",\n                  is_deleted: false,\n                  transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                }\n              ],\n              skipDuplicates: true\n            }\n          }\n        },\n        include: {\n          transaction_detail: true,\n          user_detail: {\n            select: {\n              id: true,\n              first_name: true,\n              last_name: true,\n              user_email: true,\n              balance: {\n                select: {\n                  balance_amount: true\n                }\n              }\n            }\n          }\n        }\n      })\n\nUnknown argument `transaction_id`. Did you mean `transaction_unit`? Available options are marked with ?."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/transactions/transaction-services.ts:253:10\n\n  250   })\n  251 \n  252 const updated = await tx.transaction\n→ 253   .update({\n          where: {\n            id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n          },\n          data: {\n            notes: \"299e4574-b300-432f-a0cc-758ec2a51402 telah update\",\n            transaction_status: \"Success\",\n            transaction_type: \"Redeem\",\n            transaction_detail: {\n              createMany: {\n                data: [\n                  {\n                    id: \"0cf04a17-5875-47a6-9a1f-9969b4be3117\",\n                    transaction_amount: 300,\n                    transaction_weight: 10,\n                    transaction_date: \"2024-03-15T21:57:42.169Z\",\n                    transaction_unit: \"Kg\",\n                    transaction_material: \"Bronze\",\n                    transaction_image_url: null,\n                    created_at: \"2024-03-16T17:29:35.700Z\",\n                    updated_at: \"2024-03-16T17:29:35.700Z\",\n                    is_deleted: false,\n                    transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                  },\n                  {\n                    id: \"bda833c5-512e-451c-92d3-89e9ad1ff273\",\n                    transaction_amount: 300,\n                    transaction_weight: 10,\n                    transaction_date: \"2024-03-15T22:46:24.653Z\",\n                    transaction_unit: \"Kg\",\n                    transaction_material: \"Concrete\",\n                    transaction_image_url: null,\n                    created_at: \"2024-03-16T17:29:35.700Z\",\n                    updated_at: \"2024-03-16T17:29:35.700Z\",\n                    is_deleted: false,\n                    transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                  },\n                  {\n                    id: \"137c66b1-181a-4413-9fd6-f8d72dfacdf6\",\n                    transaction_amount: 300,\n                    transaction_weight: 10,\n                    transaction_date: \"2024-03-15T18:29:59.066Z\",\n                    transaction_unit: \"Kg\",\n                    transaction_material: \"Frozen\",\n                    transaction_image_url: null,\n                    created_at: \"2024-03-16T17:29:35.700Z\",\n                    updated_at: \"2024-03-16T17:29:35.700Z\",\n                    is_deleted: false,\n                    transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                  },\n                  {\n                    id: \"28ceb133-06a0-4eb4-95a1-45d1d6e4c154\",\n                    transaction_amount: 300,\n                    transaction_weight: 10,\n                    transaction_date: \"2024-03-16T02:08:44.852Z\",\n                    transaction_unit: \"Kg\",\n                    transaction_material: \"Metal\",\n                    transaction_image_url: null,\n                    created_at: \"2024-03-16T17:29:35.700Z\",\n                    updated_at: \"2024-03-16T17:29:35.700Z\",\n                    is_deleted: false,\n                    transaction_id: \"299e4574-b300-432f-a0cc-758ec2a51402\"\n                  }\n                ],\n                skipDuplicates: true\n              }\n            }\n          },\n          include: {\n            transaction_detail: true,\n            user_detail: {\n              select: {\n                id: true,\n                first_name: true,\n                last_name: true,\n                user_email: true,\n                balance: {\n                  select: {\n                    balance_amount: true\n                  }\n                }\n              }\n            }\n          }\n        })\n\nUnknown argument `transaction_id`. Did you mean `transaction_unit`? Available options are marked with ?."}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/users/user-services.ts:388:43\n\n  385  * @throws {ResponseError}\n  386  * */\n  387 static async getAllUser(adminOnly: boolean = false): Promise<any> {\n→ 388   const users = await prismaClient.user.findMany({\n          where: {\n            role_id: \"Admin\",\n            user_detail: {\n              deleted_at: {\n                equals: null\n              },\n              activated_at: {\n                not: null\n              }\n            }\n          },\n          select: {\n            id: true,\n            email: true,\n            phone_number: true,\n            role_id: true,\n            user_detail: {\n              select: {\n                id: true,\n                first_name: true,\n                last_name: true,\n                user_image_url: true,\n                activated_at: true,\n                deleted_at: true,\n                balance: {\n                  select: {\n        ?           id?: true,\n        ?           user_detail_id?: true,\n        ?           balance_amount?: true,\n        ?           created_at?: true,\n        ?           updated_at?: true,\n        ?           user_detail?: true\n                  }\n                }\n              }\n            }\n          }\n        })\n\nThe `select` statement for type UserBalance needs at least one truthy value."}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/users/user-services.ts:388:43\n\n  385  * @throws {ResponseError}\n  386  * */\n  387 static async getAllUser(adminOnly: boolean = false): Promise<any> {\n→ 388   const users = await prismaClient.user.findMany({\n          where: {\n            role_id: \"Admin\",\n            user_detail: {\n              deleted_at: {\n                equals: null\n              },\n              activated_at: {\n                not: null\n              }\n            }\n          },\n          select: {\n            id: true,\n            email: true,\n            phone_number: true,\n            role_id: true,\n            user_detail: {\n              select: {\n                id: true,\n                first_name: true,\n                last_name: true,\n                user_image_url: true,\n                activated_at: true,\n                deleted_at: true,\n                balance: {\n                  select: {\n        ?           id?: true,\n        ?           user_detail_id?: true,\n        ?           balance_amount?: true,\n        ?           created_at?: true,\n        ?           updated_at?: true,\n        ?           user_detail?: true\n                  }\n                }\n              }\n            }\n          }\n        })\n\nThe `select` statement for type UserBalance needs at least one truthy value."}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/users/user-services.ts:388:43\n\n  385  * @throws {ResponseError}\n  386  * */\n  387 static async getAllUser(adminOnly: boolean = false): Promise<any> {\n→ 388   const users = await prismaClient.user.findMany({\n          where: {\n            role_id: \"Admin\",\n            user_detail: {\n              deleted_at: {\n                equals: null\n              },\n              activated_at: {\n                not: null\n              }\n            }\n          },\n          select: {\n            id: true,\n            email: true,\n            phone_number: true,\n            role_id: true,\n            user_detail: {\n              select: {\n                id: true,\n                first_name: true,\n                last_name: true,\n                user_image_url: true,\n                activated_at: true,\n                deleted_at: true,\n                balance: {\n                  select: {\n        ?           id?: true,\n        ?           user_detail_id?: true,\n        ?           balance_amount?: true,\n        ?           created_at?: true,\n        ?           updated_at?: true,\n        ?           user_detail?: true\n                  }\n                }\n              }\n            }\n          }\n        })\n\nThe `select` statement for type UserBalance needs at least one truthy value."}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/users/user-services.ts:388:43\n\n  385  * @throws {ResponseError}\n  386  * */\n  387 static async getAllUser(adminOnly: boolean = false): Promise<any> {\n→ 388   const users = await prismaClient.user.findMany({\n          where: {\n            role_id: \"Admin\",\n            user_detail: {\n              deleted_at: {\n                equals: null\n              },\n              activated_at: {\n                not: null\n              }\n            }\n          },\n          select: {\n            id: true,\n            email: true,\n            phone_number: true,\n            role_id: true,\n            user_detail: {\n              select: {\n                id: true,\n                first_name: true,\n                last_name: true,\n                user_image_url: true,\n                activated_at: true,\n                deleted_at: true,\n                balance: {\n                  select: {\n        ?           id?: true,\n        ?           user_detail_id?: true,\n        ?           balance_amount?: true,\n        ?           created_at?: true,\n        ?           updated_at?: true,\n        ?           user_detail?: true\n                  }\n                }\n              }\n            }\n          }\n        })\n\nThe `select` statement for type UserBalance needs at least one truthy value."}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/users/user-services.ts:388:43\n\n  385  * @throws {ResponseError}\n  386  * */\n  387 static async getAllUser(adminOnly: boolean = false): Promise<any> {\n→ 388   const users = await prismaClient.user.findMany({\n          where: {\n            role_id: \"Admin\",\n            user_detail: {\n              deleted_at: {\n                equals: null\n              },\n              activated_at: {\n                not: null\n              }\n            }\n          },\n          select: {\n            id: true,\n            email: true,\n            phone_number: true,\n            role_id: true,\n            user_detail: {\n              select: {\n                id: true,\n                first_name: true,\n                last_name: true,\n                user_image_url: true,\n                activated_at: true,\n                deleted_at: true,\n                balance: {\n                  select: {\n        ?           id?: true,\n        ?           user_detail_id?: true,\n        ?           balance_amount?: true,\n        ?           created_at?: true,\n        ?           updated_at?: true,\n        ?           user_detail?: true\n                  }\n                }\n              }\n            }\n          }\n        })\n\nThe `select` statement for type UserBalance needs at least one truthy value."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.count()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:55:41\n\n  52   metadata: any\n  53   result: any[]\n  54 }> {\n→ 55   const count = prismaClient.material.count({\n         select: {\n           _count: {\n             select: {\n               _all: true\n             }\n           }\n         },\n         where: {\n           is_deleted: false,\n           is_active: \"true\",\n                      ~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:67:29\n\n  64 })\n  65 const [metadata, result] = await Promise.all([\n  66   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 67   prismaClient.material.findMany({\n         skip: 0,\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: \"true\",\n                      ~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.count()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:55:41\n\n  52   metadata: any\n  53   result: any[]\n  54 }> {\n→ 55   const count = prismaClient.material.count({\n         select: {\n           _count: {\n             select: {\n               _all: true\n             }\n           }\n         },\n         where: {\n           is_deleted: false,\n           is_active: \"true\",\n                      ~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:67:29\n\n  64 })\n  65 const [metadata, result] = await Promise.all([\n  66   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 67   prismaClient.material.findMany({\n         skip: 0,\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: \"true\",\n                      ~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.count()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:56:41\n\n  53   result: any[]\n  54 }> {\n  55   console.log('getAll:material', typeof param.is_active)\n→ 56   const count = prismaClient.material.count({\n         select: {\n           _count: {\n             select: {\n               _all: true\n             }\n           }\n         },\n         where: {\n           is_deleted: false,\n           is_active: \"true\",\n                      ~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:68:29\n\n  65 })\n  66 const [metadata, result] = await Promise.all([\n  67   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 68   prismaClient.material.findMany({\n         skip: 0,\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: \"true\",\n                      ~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.count()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:56:41\n\n  53   result: any[]\n  54 }> {\n  55   console.log('getAll:material', typeof param.is_active)\n→ 56   const count = prismaClient.material.count({\n         select: {\n           _count: {\n             select: {\n               _all: true\n             }\n           }\n         },\n         where: {\n           is_deleted: false,\n           is_active: \"true\",\n                      ~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:68:29\n\n  65 })\n  66 const [metadata, result] = await Promise.all([\n  67   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 68   prismaClient.material.findMany({\n         skip: 0,\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: \"true\",\n                      ~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.count()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:57:41\n\n  54 }> {\n  55   console.log('getAll:material', typeof param.is_active)\n  56   \n→ 57   const count = prismaClient.material.count({\n         select: {\n           _count: {\n             select: {\n               _all: true\n             }\n           }\n         },\n         where: {\n           is_deleted: false,\n           is_active: \"true\",\n                      ~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:69:29\n\n  66 })\n  67 const [metadata, result] = await Promise.all([\n  68   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 69   prismaClient.material.findMany({\n         skip: 0,\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: \"true\",\n                      ~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:69:29\n\n  66 })\n  67 const [metadata, result] = await Promise.all([\n  68   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 69   prismaClient.material.findMany({\n         skip: 0,\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: \"true\",\n                      ~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:69:29\n\n  66 })\n  67 const [metadata, result] = await Promise.all([\n  68   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 69   prismaClient.material.findMany({\n         skip: 0,\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: \"false\",\n                      ~~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:69:29\n\n  66 })\n  67 const [metadata, result] = await Promise.all([\n  68   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 69   prismaClient.material.findMany({\n         skip: 0,\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: \"false\",\n                      ~~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:69:29\n\n  66 })\n  67 const [metadata, result] = await Promise.all([\n  68   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 69   prismaClient.material.findMany({\n         skip: 0,\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: \"false\",\n                      ~~~~~~~\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         }\n       })\n\nArgument `is_active`: Invalid value provided. Expected BoolFilter or Boolean, provided String."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:136:8\n\n  133 }\n  134 const data: MaterialParam = await Validate(MaterialCreateSchema, param)\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `.update()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:136:8\n\n  133 }\n  134 const data: MaterialParam = await Validate(MaterialCreateSchema, param)\n  135 const material = await prismaClient.material\n→ 136   .update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:69:29\n\n  66 })\n  67 const [metadata, result] = await Promise.all([\n  68   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 69   prismaClient.material.findMany({\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: undefined,\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         },\n       + skip: Int\n       })\n\nArgument `skip` is missing."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:69:29\n\n  66 })\n  67 const [metadata, result] = await Promise.all([\n  68   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 69   prismaClient.material.findMany({\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: undefined,\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         },\n       + skip: Int\n       })\n\nArgument `skip` is missing."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:69:29\n\n  66 })\n  67 const [metadata, result] = await Promise.all([\n  68   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 69   prismaClient.material.findMany({\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: undefined,\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         },\n       + skip: Int\n       })\n\nArgument `skip` is missing."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:69:29\n\n  66 })\n  67 const [metadata, result] = await Promise.all([\n  68   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 69   prismaClient.material.findMany({\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: undefined,\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         },\n       + skip: Int\n       })\n\nArgument `skip` is missing."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:69:29\n\n  66 })\n  67 const [metadata, result] = await Promise.all([\n  68   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 69   prismaClient.material.findMany({\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: undefined,\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         },\n       + skip: Int\n       })\n\nArgument `skip` is missing."}
{"level":"error","message":"Error: \nInvalid `prismaClient.material.findMany()` invocation in\n/home/hasbi/code/bank sampah/backend/src/services/materials/material-services.ts:69:29\n\n  66 })\n  67 const [metadata, result] = await Promise.all([\n  68   generatePaginationMetadata(Number(param.page || 1), Number(param.limit || 10), count),\n→ 69   prismaClient.material.findMany({\n         take: 10,\n         where: {\n           is_deleted: false,\n           is_active: undefined,\n           name: {\n             contains: \"\"\n           },\n           deleted_at: null\n         },\n         orderBy: {\n           created_at: \"desc\"\n         },\n       + skip: Int\n       })\n\nArgument `skip` is missing."}
{"level":"error","message":"Error: \nInvalid `.create()` invocation in\n/Users/retts.mac1/Hasbi/outsider/bs/express/src/services/transactions/transaction-services.ts:19:10\n\n  16 const trans: TransactionCreateParam = await Validate(TransactionCreateRedeemSchema, params)\n  17 const data = await prismaClient.$transaction(async (tx) => {\n  18   const redeemTransaction = await tx.transaction\n→ 19     .create(\nAn operation failed because it depends on one or more records that were required but not found. No 'UserDetail' record(s) (needed to inline the relation on 'Transaction' record(s)) was found for a nested connect on one-to-many relation 'TransactionToUserDetail'."}
